// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ChatContentDao is the data access object for table chat_content.
type ChatContentDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns ChatContentColumns // columns contains all the column names of Table for convenient usage.
}

// ChatContentColumns defines and stores column names for table chat_content.
type ChatContentColumns struct {
	Id         string // 聊天信息ID
	Content    string // 聊天内容
	Read       string // 是否已读
	SendId     string // 发送者ID
	ReceiveId  string // 接收者ID
	CreateTime string // 创建时间
	ReadTime   string // 已读时间
}

// chatContentColumns holds the columns for table chat_content.
var chatContentColumns = ChatContentColumns{
	Id:         "id",
	Content:    "content",
	Read:       "read",
	SendId:     "send_id",
	ReceiveId:  "receive_id",
	CreateTime: "create_time",
	ReadTime:   "read_time",
}

// NewChatContentDao creates and returns a new DAO object for table data access.
func NewChatContentDao() *ChatContentDao {
	return &ChatContentDao{
		group:   "default",
		table:   "chat_content",
		columns: chatContentColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ChatContentDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ChatContentDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ChatContentDao) Columns() ChatContentColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ChatContentDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ChatContentDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ChatContentDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
